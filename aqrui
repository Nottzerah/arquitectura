<!DOCTYPE html>
<html>
	<link rel="stylesheet" type="text/css" href="../CSS/Style.css" media="screen"/>
	<title> Arquitectura</title>
<span class="boton"><a href="ARQUI EDGAR CARRILLO EQUIPOS.pdf" download>Descargar PDF 1</a><br><a href="arqui practica3.pdf" download>Descargar PDF 2</a><br><a href="arquitectura.pdf" download>Descargar PDF 3</a><br><a href="tarea arqui cotizacion Edgar Carrillo.pdf" download>Descargar PDF 4</a></span>

<head>
<style>
		.boton {
    display: inline-block;
    padding: 10px 20px;
    background-color: #337ab7;
    color: #fff;
    text-decoration: none;
    border-radius: 4px;
    font-family: Arial, sans-serif;
  }

  .boton:hover {
    background-color: #286090;
  }
		body {
			font-family: Arial, sans-serif;
			margin: 20px;
			background-color: lightblue;
			text-align: center
		}

		.topic-box {
			border: 1px solid #ccc;
			padding: 10px;
			margin-bottom: 20px;
			
		}

		.topic-box h2 {
			border: 1px solid #ccc;
			background-color: #f5f5f5;
			padding: 10px;
			margin: 0;
			
		}

		.topic-box p {
			border: 1px solid #ccc;
			padding: 10px;
			margin: 0;
			text-align: left;
		}
		h1 {
            color: #333;
			font-size: 40px;
			text-align: center;
        }
	</style>
	
</head>
<body>
				<h1>UNIDAD 1</h1>
	<div class="topic-box">
<h2 id="1.1 Modelos de arquitectura de computo.">1.1 Modelos de arquitectura de computo.</h2><br>
      <p>La arquitectura de computadoras es el diseño y la organización de un sistema para un equipo de cómputo.<br>
      Es un modelo y descripción de cada función, así como los requerimientos y las implementaciones de diseño para varias partes del equipo de cómputo.</p><br>
	  </div>
	  <div class="topic-box">
    <h2 id="1.1.1 Clasicas.">1.1.1 Clasicas.</h2><br>
      <p>Estas arquitecturas se desarrollaron en las primeras computadoras electromecánicas y de tubos de vacío.<br>
        Hay dos arquitecturas distintas relacionadas con el uso y distribución de la memoria: Arquitectura de Jonh Von Neumman y Arquitectura Harvard.<br>
        Arquitectura Von Neumann<br>
        La unidad central de proceso (CPU), está conectada a una memoria principal única (casi siempre sólo RAM) donde se guardan las instrucciones del programa y los datos.<br>
        A dicha memoria se accede a través de un sistema interconexión de buses único (control, direcciones y datos).<br>
        En un sistema con arquitectura Von Neumann el tamaño de la unidad de datos o instrucciones está fijado por el ancho del bus que comunica la memoria con la CPU.<br>
        El tener un único bus hace que el microprocesador sea más lento en su respuesta, ya que no puede buscar en memoria una nueva instrucción mientras no finalicen las transferencias de datos de la instrucción anterior.<br>
        Componentes principales de Von Neumann: <br>
        Unidad de Memoria.<br>
        Unidad de Entrada/Salida.<br>
        Unidad de Control. <br>
        Incluidos CPU. <br>
        Unidad Aritmética Lógica. <br>
        Incluida en CPU. <br>
        Registros de Programas. <br>
        Incluidos en CPU.<br>
        Las instrucciones provenientes del sistema de entrada, son almacenados por la memoria, procesados por la ALU bajo la dirección de la unidad de control. <br>
        Los resultados obtenidos son enviados a la unidad de salida. <br>
        En las computadoras de programa almacenado, el programa puede manipularse como si se tratara de datos. <br>
        Este concepto da origen a los compiladores, sistemas operativos y es la base de la gran versatilidad de las computadoras modernas.<br>
        Limitaciones del modelo Von Neumann: La longitud de las instrucciones por el bus de datos, que hace que el microprocesador tenga que realizar varios accesos a memoria para buscar instrucciones complejas.<br>
        Modelo Harvard<br>
        Esta arquitectura utiliza los Micro controladores, tiene la unidad central de proceso (CPU) conectada a dos memorias (una con las instrucciones y otra con los datos) por medio de dos buses diferentes.<br>
        Una de las memorias contiene solamente las instrucciones del programa (Memoria de Programa), y la otra sólo almacena datos (Memoria de Datos). <br>
        Ambos buses son totalmente independientes lo que permite que la CPU pueda acceder de forma independiente y simultánea a la memoria de datos y a la de instrucciones. <br>
        El tamaño de las instrucciones no está relacionado con el de los datos, y por lo tanto puede ser optimizado para que cualquier instrucción ocupe una sola posición de memoria de programa, logrando así mayor velocidad y menor longitud de programa.<br>
        La principal desventaja de esta arquitectura; el bus de datos y direcciones único se convierte en un cuello de botella por el cual debe pasar toda la información que se lee de o se escribe a la memoria, obligando a que todos los accesos a esta sean secuenciales. <br>
        Limita el grado de paralelismo (acciones que se pueden realizar al mismo tiempo) y por lo tanto, el desempeño de la computadora.<br>
        </p><br>
		</div>
		<div class="topic-box">
    <h2 id="1.1.2 Segmentadas.">1.1.2 Segmentadas.</h2><br>
      <p>Es una de las tecnologías utilizadas para realizar la segmentación o paralelismo. Divide el procesador, en etapas, procesa una instrucción diferente en cada una y trabaja con varias a la vez.<br>
      Pueden trabajar de forma paralela, en diferentes instrucciones, utilizando una cola de instrucciones para su comunicación, denominado entubamiento. <br>
      La técnica de implementación clave utilizada para hacer CPU.<br>
      La dependencia de datos y de control, que tiene como efecto la disminución del rendimiento del pipelining.<br>
      La segmentación de cauce (pipelining) es una forma efectiva de organizar el hardware del CPU para realizar más de una operación al mismo tiempo. <br>
      Consiste en descomponer el proceso de ejecución de las instrucciones en fases o etapas que permitan una ejecución simultánea.<br>
      Las etapas están conectadas, cada una a la siguiente, para formar una especie de cauce las instrucciones se entran por un extremo, son procesadas a través de las etapas y salen por el otro. La productividad de la segmentación está determinada por la frecuencia con que una instrucción salga del cauce.<br>
      </p><br>
	  </div>
	  <div class="topic-box">
    <h2 id="1.1.3 De multiprocesamiento.">1.1.3 De multiprocesamiento.</h2><br>
      <p>Se denomina multiprocesador a un computador que cuenta con dos o más microprocesadores (CPUs). <br>
        La arquitectura NUMA, donde cada procesador tiene acceso y control exclusivo a una parte de la memoria. <br>
        La arquitectura SMP, donde todos los procesadores comparten toda la memoria.<br>
        Para que un multiprocesador opere correctamente necesita un sistema operativo especialmente diseñado para ello.<br>
        La arquitectura NUMA, donde cada procesador tiene acceso y control exclusivo a una parte de la memoria. <br>
        La arquitectura SMP, donde todos los procesadores comparten toda la memoria.<br>
        Los CPU de multiprocesamiento según Flynn se clasifican de la siguiente manera:<br>
        SISO : (Single Instruction, Single Operand) computadoras. Monoprocesador<br>
        SIMO : (Single Instruction, Multiple Operand) procesadores vectoriales, Exenciones MMX<br>
        MISO : (Multiple Instruction, Single Operand) No implementado<br>
        MIMO : (Multiple Instruction, Multiple Operand) sistemas SMP, Clusters, GPUs<br>
        Los procesadores vectoriales, son computadoras pensadas para aplicar un mismo algoritmo numérico a una serie de datos matriciales, en especial en la simulación de sistemas físicos complejos, tales como simuladores de clima, explosiones atómicas, reacciones químicas, etc.<br>
         Donde los datos son representados como grandes números de datos en forma matricial sobre los que se deben se aplicar el mismo algoritmo numérico.<br>
        Los Procesadores Digitales de Señales (DSP), son procesadores especializados en el procesamiento de señales tales como audio, vídeo, radar, sonar, radio, etc. Cuentan con instrucciones tipo vectorial que los hace muy aptos para dicha aplicación.<br>
        SMP<br>
        En los sistemas SMP (Simetric Multiprocessing), varios procesadores comparten la misma memoria principal y periféricos de Entrada /Salida, normalmente conectados por un bus común.<br>
        Se conocen como simétricos, ya que ningún procesador toma el papel de maestro y los demás de esclavos, sino que todos tienen derechos similares en cuanto al acceso a la memoria y periféricos y ambos son administrados por el sistema operativo. <br>
        Pueden formarse con varios núcleos en un solo circuito integrado o con varios circuitos integrados en una misma tarjeta madre. <br>
        La primera opción ha sido popularizada al hacerse más económicos los procesadores multinúcleo de los principales fabricantes y con su uso en sistemas de gama media y baja, e inclusive en teléfonos celulares y tabletas.<br>
        La segunda opción fue la que se uso en un principio y sigue siendo usada en en estaciones de trabajo y en servidores de alto rendimiento debido a que incrementa el poder computacional del sistema, pero también incrementa considerablemente el costo del sistema.<br>
        Clusters<br>
        Conjuntos de computadoras independientes conectadas en una red de área local o por un bus de interconexión y que trabajan cooperativamente. <br>
        Con un sistema de procesamiento paralelo o distribuido.<br>
        Es clave en su funcionamiento contar con un sistema operativo y programas de aplicación capaces de distribuir el trabajo entre las computadoras de la red.<br>
        Se debe tener cuidado al implementar la aplicación, ya que si los datos que hay que pasar de un procesador a otro son demasiados, el tiempo empleado en pasar información de un nodo a otro puede sobrepasar a la ganancia que se tiene al dividir el trabajo entre varios procesadores.<br>
      </p><br>
	  </div>
	  <div class="topic-box">
    <h2 id="1.2 Analisis de los componentes.">1.2 Analisis de los componentes.</h2><br>
    	 <p>Los programas cada vez más grandes y complejos demandan mayor velocidad en el procesamiento de información, lo que implica la elección de microprocesadores más rápidos y eficientes.</p><br>
		 </div>
	 <div class="topic-box">
    <h2 id="1.2.1 Arquitecturas.">1.2.1 Arquitecturas.</h2><br>
      <p>Arquitecturas Cisc<br>
      En la arquitectura computacional, CISC es un modelo de arquitectura, en donde los microprocesadores tienen un conjunto instrucciones que caracterizan por ser muy amplio y permitir operaciones complejas entre operandos, situados en la memoria o en los registros internos.<br>
      Este tipo de arquitectura dificulta el paralelismo entre instrucciones, por lo que, en la actualidad, la mayoría de los sistemas CISC de alto rendimiento implementan un sistema que convierte dichas instrucciones complejas en varias instrucciones simples del tipo RISC, llamadas generalmente microinstrucciones.<br>
      Dato importante: Los CISC pertenecen a la primera corriente de construcción de procesadores, antes del desarrollo de los RISC. <br>
      Ademas Para realizar una sola instrucción un chip CISC requiere de cuatro a diez ciclos de reloj.<br>
      Entre las ventajas de CISC destacan las siguientes:<br>
      Reduce la dificultad de crear compiladores.<br>
      Permite reducir el costo total del sistema.<br>
      Reduce los costos de creación de software.<br>
      Mejora la compactación de código.<br>
      Facilita la depuración de errores.<br>
      Arquitecturas Cisc<br>
      Arquitectura computacional, RISC (Reduced Instruction Set Computer) es un tipo de microprocesador con las siguientes características fundamentales:<br>
      Instrucciones de tamaño fijo y presentado en un reducido número de formatos.<br>
      Sólo las instrucciones de carga y almacenamiento acceden a la memoria de datos.<br>
      El objetivo de diseñar máquinas con esta arquitectura es posibilitar la segmentación y el paralelismo en la ejecución<br>
      de instrucciones y reducir los accesos a memoria.<br>
      Las máquinas RISC protagonizan la tendencia actual de construcción de microprocesadores.<br>
      </p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="1.2.1.1 Unidad Central de Procesamiento.">1.2.1.1 Unidad Central de Procesamiento.</h2><br>
        <p>Se la suele llamar coloquialmente como microprocesador o simplemente procesador, y puedes considerarla como el cerebro de cualquier dispositivo. <br>
          Se encarga de procesar todas las instrucciones del dispositivo, leyendo las órdenes y requisitos del sistema operativo, así como las instrucciones de cada uno de los componentes y las aplicaciones.<br>
          CPU es la que se encarga de que todo funcione correctamente, y de interpretar todo lo que quiere hacer el sistema operativo o los componentes, estableciendo las conexiones y realizando todos los cálculos precisos para que funcione. <br>
          Cuanto más potente sea el procesador, más rápido podrá hacer las operaciones y más rápido funcionará tu dispositivo en general.<br>
          Los CPUs modernos se pueden clasificar por sus características como:<br>
          Tamaño de la Unidad Aritmética Lógica (ALU).<br>
          Bus de conexión al exterior (8, 16, 32, 64 bits).<br>
          Si su arquitectura tiene cauce (pipeline).<br>
          Si son de arquitectura CISC o RISC.<br>
          Si son Von Newmann o Harvard.<br>
          Si manejan instrucciones enteras o implementan también instrucciones de punto flotante.<br>
          No hace mucho tiempo, el procesador era algo totalmente desconocido por los usuarios de PCs. <br>
          Esto fue cambiando con el tiempo y en la actualidad cualquier persona al comprar un equipo se pregunta acerca de los atributos elementales de este dispositivo. <br>
          Es que el procesador es una parte esencial de la computadora, por eso generalmente se la conoce como su “cerebro”.<br>
          </p><br>
		  </div>
		  <div class="topic-box">
        <h2 id="1.2.1.2 Unidad Aritmética Lógica.">1.2.1.2 Unidad Aritmética Lógica.</h2><br>
          <p>Es un circuito logico digital que realiza operaciones aritmeticas y logicas entres los datos de un circuito: suma resta, division y multiplicacion, asi como establece comparaciones logicas a traves de los condicionales logicos "si", "no", y "o".<br>
          Todos los microprocesadores incluyen al menos una ALU, que varia su poder y complejidadsegún su finalidad Además, la ALU cuenta con una serie de registros para almacenar los datos y bits de informacion sobre los resultados.<br>
          Operaciones a realizar por la ALU:<br>
          Suma aritmetica<br>
          Resta aritmetica<br>
          peraciones lógicas<br>
          Desplazamiento o rotación<br>
          Transferencia<br>
          El circuito ALU es solo un operador, no puede tomar decisiones. <br>
          Las entradas deben contener tanto la magnitud como el signo que corresponda a la operacion.<br>
          La ALU deberá contar con un circuito de control que le permita:<br>
          Identificar la operación a realizar<br>
          Administrar los recursos internos.<br>
          Generar las banderas<br>
          </p><br>
		  </div>
		  <div class="topic-box">
      <h2 id="1.2.1.3 Registros.">1.2.1.3 Registros.</h2><br>
        <p>Los registros que encuentran dentro de cada procesador su función principales almacenar los valores de cada uno de los datos,comandos,instrucciones o estados binarios que son los que ordenan qué dato debe procesarse, así como la forma en la que se debe realizar.<br>
        Un registro no deja de ser una memoria de velocidad alta y con poca capacidad. <br>
        Cada registro puede contener una instrucción, una dirección de almacenamiento o cualquier tipo de dato.<br>
        Cada procesador tiene varias asignaciones o tareas que debe de realizar para el manejo de la información. <br>
        La información es recibida generalmente en código binario, procedente de las aplicaciones para, después, procesarlos de una forma determinada.<br>
        Tipos de registros<br>
        Los registros del procesador se dividen o clasifican atendiendo al propósito que sirven o a las instrucciones que les ordenan.<br>
        Registros de datos: Guardan valores de datos numéricos, como son los caracteres o pequeñas órdenes. <br>
        Los procesadores antiguos tenían un registro especial de datos: el acumulador, el cual era usado para operaciones determinadas.<br>
        Registros de datos de memoria (MDR): Es un registro que se encuentra en el procesador y que está conectado al bus de datos. <br>
        Tiene poca capacidad y una velocidad alta por la que escribe o lee los datos del bus que van dirigidos a la memoria o al puerto E/S, es decir, un periférico.<br>
        Registros de direcciones: Guardan direcciones que son usadas para acceder a la memoria principal o primaria, que solemos conocer como ROM o RAM. <br>
        En este sentido, podemos ver procesadores con registros que se usan solo para guardar direcciones o valores numéricos.<br>
        Registros de propósito general (GPRs): Son registros que sirven para almacenar direcciones o datos generales. <br>
        Se trata de una especie de registros mixtos que, como su propio indica, no tienen una función específica.<br>
        Registros de propósito específico (SPRs): En esta ocasión, estamos ante registros que guardan datos del estado del sistema, como puede ser el registro de estado o el instruction pointer.<br>
        Registros de estado: Sirven para guardar valores reales cuya función es determinar cuándo una instrucción debe ejecutarse o no.<br>
        Registros constantes: Su cometido es guardar valores de sólo lectura como son el 0, 1 ó π.<br>
        </p><br>
		</div>
		<div class="topic-box">
      <h2 id="1.2.1.4 Buses.">1.2.1.4 Buses.</h2><br>
        <p>Un bus se puede definir como una línea de interconexión portadora de información, constituida por varios hilos conductores (en sentido físico) o varios canales (en sentido de la lógica), por cada una de las cuales se transporta un bit de información.<br>
        Existen dos tipos primordiales de buses (conexiones) para el envío de la información: bus paralelo o serial:<br>
        Bus paralelo: Es un bus en el cual los datos son enviados por bytes al mismo tiempo, con la ayuda de varias líneas que tienen funciones fijas. <br>
        La cantidad de datos enviada es bastante grande con una frecuencia moderada y es igual al ancho de los datos por la frecuencia de funcionamiento. <br>
        En los computadores ha sido usado de manera intensiva, desde el bus del procesador, los buses de discos duros, tarjetas de expansión y de vídeo hasta las impresoras.<br>
        Bus serie: En este los datos son enviados, bit a bit y se reconstruyen por medio de registros o rutinas de software. Está formado por pocos conductores y su ancho de banda depende de la frecuencia. Es usado desde hace menos de 10 años en buses para discos duros, tarjetas de expansión y para el bus del procesador.<br>
        Buses del procesador:<br>
        Bus de direcciones: Es unidireccional debido a que la información fluye es una solo sentido, del CPU a la memoria ó a los elementos de entrada y salida. <br>
        El CPU puede colocar niveles lógicos en las n líneas de dirección, con la cual se genera 2n posibles direcciones diferentes. <br>
        Cada una de estas direcciones corresponde a una localidad de la memoria ó dispositivo de E/S. <br>
        El procesador envía un código de dirección a la memoria o a otro dispositivo externo. <br>
        El tamaño o anchura del bus de direcciones está especificado por el número de hilos conductores o pines.<br>
        Bus de datos: Es bidireccional, pues los datos pueden fluir hacia ó desde el CPU.Las terminales pueden ser entradas ó salidas, según la operación que se este realizando (lectura ó escritura).<br>
        En todos los casos, las palabras de datos transmitidas tiene m bits de longitud debido a que el CPU maneja palabras de datos de m bits; del número de bits del bus de datos, depende la clasificación del procesador.<br>
        En algunos procesadores, el bus de datos se usa para transmitir otra información además de los datos.Es compartido en el tiempo ó multiplexado. Transfieren datos o códigos de instrucción hacia el procesador o se envían hacia el exterior los resultados de las operaciones o cálculos.<br>
        Bus de control: Este conjunto de señales se usa para sincronizar las actividades y transacciones con los periféricos del sistema. <br>
        Algunas de estas señales, como Lectura o Escritura R / W , son señales que el CPU envía para indicar que tipo de operación se espera en ese momento.<br>
        </p><br>
		</div>
		<div class="topic-box">
      <h2 id="1.2.2 Memoria">1.2.2 Memoria</h2><br>
      <p>Es un dispositivo que puede mantenerse en por lo menos dos estados estables por un cierto periodo de tiempo.  <br>
        Cada uno de estos estados estables puede utilizarse para representar un bit. <br>
        A un dispositivo con la capacidad de almacenar por lo menos un bit se le conoce como celda básica de memoria.<br>
        Un dispositivo de memoria completo se forma con varias celdas básicas y los circuitos asociados para poder leer y escribir dichas celdas básicas, agrupadas como localidades de memoria que permitan almacenar un grupo de N bits.<br>
      </p><br>
	  </div>
<br>
		<div class="topic-box">
      <h2 id="1.2.2.1 Conceptos basicos del manejo de la memoria.">1.2.2.1 Conceptos basicos del manejo de la memoria.</h2><br>
      <p>La gestión de memoria o administración de memoria es el acto de gestionar la memoria de un dispositivo informático. <br>
        El proceso de asignación de memoria a los programas que la solicitan. <br>
        La gestión de la memoria principal de una computadora es una tarea de suma importancia para el funcionamiento de la misma.<br>
        Los sistemas de memoria virtual separan las direcciones de memoria utilizadas por un proceso de las direcciones físicas reales, permitiendo la separación de procesos e incrementando la cantidad efectiva de memoria de acceso aleatorio utilizando la paginación. La calidad de la gestión de la memoria es crucial para las prestaciones del sistema.<br>
        La administración de memoria se refiere a los distintos métodos y operaciones que se encargan de obtener la máxima utilidad de la memoria, organizando los procesos y programas que se ejecutan de manera tal que se aproveche de la mejor manera posible el espacio disponible.<br>
        Las técnicas que existen para la carga de programas en la memoria son: partición fija, que es la división de la memoria libre en varias partes (de igual o distinto tamaño) y la partición dinámica, que son las particiones de la memoria en tamaños que pueden ser variables, según la cantidad de memoria que necesita cada proceso.<br>
      </p><br>
	  </div>
<br>
		<div class="topic-box">
      <h2 id="1.2.2.2 Memoria principal.">1.2.3.2 Memoria principal.</h2><br>
      <p>La memoria del semiconductor utiliza en su arquitectura circuitos integrados basados en semiconductores para almacenar información. <br>
        Un chip de memoria de semiconductor puede contener millones de minúsculos transistores o condensadores. <br>
        Existen memorias de semiconductor de ambos tipos: volátiles y no volátiles.<br>
        En las computadoras modernas, la memoria principal consiste casi exclusivamente en memoria de semiconductor volátil y dinámica, también conocida como memoria dinámica de acceso aleatorio o más comúnmente RAM (Random Access Memory).<br>
      </p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="1.2.2.3 Memoria caché.">1.2.3.2 Memoria caché.</h2><br>
      <p>Es la memoria de acceso rápido de una computadora, que guarda temporalmente las últimas informaciones procesadas. <br>
        La memoria caché es un búfer especial de memoria que poseen las computadoras, que funciona de manera similar a la memoria principal, pero es de menor tamaño y de acceso más rápido. Es usada por el procesador para reducir el tiempo de acceso a datos ubicados en la memoria principal que se utilizan con más frecuencia.<br>
        La caché es una memoria que se sitúa entre la unidad central de procesamiento (CPU) y la memoria de acceso aleatorio (RAM) para acelerar el intercambio de datos. <br>
        Cuando se accede por primera vez a un dato, se hace una copia en la caché; los accesos siguientes se realizan a dicha copia, haciendo que sea menor el tiempo de acceso medio al dato.<br>
        Cuando el procesador necesita leer o escribir en una ubicación en memoria principal, primero verifica si una copia de los datos está en la memoria caché; si es así, el procesador de inmediato lee o escribe en la memoria caché, que es mucho más rápido que de la lectura o la escritura a la memoria principal.<br>
        La memoria caché cuenta con 3 niveles, cada uno teniendo más caché pero siendo mas lenta, siendo la de nivel 3 la más lenta.<br>
      </p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="1.2.3 Manejo de la entrada/sailda.">1.2.3 Manejo de la entrada/sailda.</h2><br>
      <p>Información sobre la Unidad 3...</p><br>
	  </div>
<br>	<div class="topic-box">
      <h2 id="1.2.3.1 Módulos de entrada/salida.">1.2.3.1 Módulos de entrada/salida.</h2><br>
      <p>Para poder hacer una operación entre el procesador y un periférico, se necesita conectar estos dispositivos a la computadora y gestionar de manera correcta la transferencia de datos. Esto, se puede realizar mediante los sistemas de módulos de Entrada/Salida. Estos módulos están conectados con el procesador y la memoria principal, cada uno controla uno o más dispositivos externos.<br>
      </p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="1.2.3.2 Entrada/Salida programada.">1.2.3.2 Entrada/Salida programada.</h2><br>
      <p>La entrada-salida programada (también entrada / salida programada , E / S programada , PIO ) es un método de transmisión de datos , a través de entrada / salida (E / S), entre una unidad central de procesamiento (CPU) y un dispositivo periférico , como un adaptador de red o un dispositivo de almacenamiento Parallel ATA (PATA, anteriormente AT Attachment (ATA)). Cada transferencia de elementos de datos se inicia mediante una instrucción en el programa, que involucra a la CPU para cada transacción. <br>
      Por el contrario, en las operaciones de acceso directo a memoria (DMA), la CPU no participa en la transferencia de datos.<br>
      El término puede referirse a E / S mapeadas en memoria (MMIO) o E / S mapeadas en puertos (PMIO). <br>
      PMIO se refiere a transferencias que utilizan un espacio de direcciones especial fuera de la memoria normal, al que generalmente se accede con instrucciones dedicadas, comoEN y FUERAen arquitecturas x86. <br>
      MMIO [1] se refiere a transferencias a dispositivos de E / S que están mapeados en el espacio de direcciones normal disponible para el programa. <br>
      PMIO fue muy útil para los primeros microprocesadores con espacios de direcciones pequeños, ya que los dispositivos de E / S no consumían el valioso recurso.<br>
</p><br>
	</div>
	<div class="topic-box">
      <h2 id="1.2.3.3 Entrada/Salida mediante interrupciones.">1.2.3.3 Entrada/Salida mediante interrupciones.</h2><br>
      <p>Esta técnica pretende evitar que el procesador pare o haga trabajo improductivo, mientras que espera a que el periférico esté preparado para hacer una nueva operación. <br>
        El hardware de la computadora, necesita tener un conjunto de líneas de control del bus del sistema y de petición de interrupción.<br>
        Funcionamiento:<br>
        El procesador ejecuta instrucciones de un programa. Al finalizar cada instrucción comprueba si se ha producido una interrupción.<br>
        En caso afirmativo se salva el estado actual del programa (contador del programa y registros) y se salta a ejecutar la rutina de servicio correspondiente.<br>
        La rutina de servicio efectúa las operaciones apropiadas en la E/S para realizar la transferencia de datos solicitada.<br>
        Al finalizar la rutina de servicio se recupera el estado de la CPU y se continúa ejecutando el programa que se estaba ejecutando antes de la interrupción.<br>
        Las interrupciones pueden ser:<br>
        ENMASCARABLES (se pueden dejar de atender por software)<br>
        NO ENMASCARABLES (siempre atendidas)<br>
        Dos formas de conocer la dirección/posición (vector) donde se encuentra la rutina de servicio de la interrupción<br>
        Vector de interrupciones siempre FIJO ó el periférico suministra el vector de interrupción<br>
      </p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="1.2.3.4 Acceso directo a memoria.">1.2.3.4 Acceso directo a memoria.</h2><br>
      <p>El DMA (acceso directo a la memoria) permite que el dispositivo de red mueva los datos del paquete directamente a la memoria del sistema, reduciendo la utilización de la CPU. Sin embargo, la frecuencia y los intervalos aleatorios en los cuales los paquetes llegan no permiten que el sistema ingrese un estado de energía más bajo. <br>
      El coalescentes DMA permite que el NIC recoja los paquetes antes de que inicie un evento DMA. Esto puede aumentar la latencia de la red, pero también aumenta las probabilidades de que el sistema consuma menos energía. <br>
      Los adaptadores y dispositivos de red basados en el controlador Ethernet Intel® I350 (y controladores posteriores) Asistencia la fusión de DMA.<br>
      Los valores coalescentes más altos de DMA resultan en más energía guardada, pero pueden aumentar la latencia de red de su sistema. <br>
      Si habilita la coalescación de DMA, también debe establecer la tasa de moderación de interrupciones en "mínimo". <br>
      Esto minimiza el impacto de latencia impuesto por la coalescencia de DMA y da como resultado un mejor rendimiento de rendimiento de red máximo. <br>
      Debe habilitar la coalescencia de DMA en todos los puertos activos del sistema. Usted no puede ganar ningún ahorro de energía si se habilita sólo en algunos de los puertos en su sistema. También hay varias configuraciones de BIOS, plataformas y aplicaciones que afectarán a su potencial ahorro energético.<br>
      </p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="1.2.3.5 Canales y procesadores de entrada/salida">1.2.3.5 Canales y procesadores de entrada/salida</h2><br>
      <p>EL canal de E/S es una extensión del bus del 8088. Este canal contiene un bus de datos bidireccinal de 8 bits, 20 líneas de dirección, 6 niveles de interrupción, líneas de control para las operaciones de lectura y escritura para la memoria y la E/S, líneas de control de 3 canales de DMA, y líneas de control para el tiempo de refresco de memoria.<br>
      Los canales de E/S proporcionan una línea Ready para permitir operaciones con dispositivos de memoria o de E/S lentos. <br>
      Cuando la línea no está activada por un dispositivo, el procesador genera ciclos de lectura y esritura a memoria que toman cuatro ciclos de 210 ns (esto es, 840 ns) por byte. <br>
      Todos los ciclos de lectura y escritura a E/S generados por el procesador requieren de cinco ciclos de 210 ns de reloj (1.05 ms) por byte. <br>
      Todas las transferencias DMA requieren de cinco ciclos de reloj para un ciclo de tiempo de 1.05 ms por byte. <br>
      Los ciclos de reloj se presentan aproximadamente cada 15 m sec y requieren de cinco ciclos de reloj.<br>
      Los dispositivos de E/S están direccionados utilizando un mapeo de E/S con el espacio de direccionamiento. El canal proporciona a las tarjetas de E/S 512 direcciones de dispositivos.<br>
      </p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="1.2.4 Buses.">1.2.4 Buses.</h2><br>
      <p>En arquitectura de computadores, el bus es un sistema digital que transfiere datos entre los componentes de una computadora. Está formado por cables o pistas en un circuito impreso, dispositivos como resistores y condensadores, además de circuitos integrados.<br>
      Un bus es una trayectoria por la cual viajan los datos en una computadora para comunicar los distintos dispositivos entre sí. <br>
      Los principales buses que se encuentran dentro de una PC son: los Buses del micro-procesador, los Buses de memoria y los Buses del sistema.<br>
      </p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="1.2.4.1 Tipos de buses.">1.2.4.1 Tipos de buses.</h2><br>
      <p>Existen dos tipos de transferencia en los buses:<br>
        Serie: El bus solamente es capaz de transferir los datos bit a bit. El bus tiene un único cable que transmite la información.<br>
        Paralelo: El bus permite transferir varios bits simultáneamente, por ejemplo 8 bits.<br>
        Aunque en primera instancia parece mucho más eficiente la transferencia en paralelo, esta presenta inconvenientes:<br>
        La frecuencia de reloj en el bus paralelo tiene que ser más reducida.<br>
        La longitud de los cables que forman el bus está limitada por las posibles interferencias, el ruido y los retardos en la señal.<br>
        Además, los modernos buses serie están formados por varios canales: En este caso se transmite por varios buses serie simultáneamente.<br>
        En los primeros computadores electrónicos, era muy habitual encontrar buses paralelos, quedando los buses serie dedicados para funciones de menor entidad y dispositivos lentos, como el teclado. La tendencia en los últimos años es reemplazar los buses paralelos por buses serie (que suelen ser multicanal). Estos son más difíciles de implementar, pero están dejando velocidades de transferencia más elevadas, además de permitir longitudes de cable mayores.<br>
      </p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="1.2.4.2 Estructura de los buses.">1.2.4.2 Estructura de los buses.</h2><br>
      <p>Un bus es un medio compartido de comunicación constituido por un conjunto de líneas (conductores) que conecta las diferentes unidades de un computador. La principal función de  <br>
        un bus será, pues, servir de soporte para la realización de transferencias de información entre dichas unidades. <br>
        La unidad que inicia y controla la transferencia se conoce como master del bus para dicha transferencia, y la unidad sobre la que se realiza la transferencia se conoce como slave. Los papeles de master y slave son dinámicos, de manera que una misma unidad puede realizar ambas funciones en transferencias diferentes. <br>
        Por ejemplo, una unidad de DMA hace de slave en la inicialización que realiza el master, la CPU, para una operación de E/S. Sin embargo, cuando comienza la operación, la unidad de DMA juega el papel de master frente a la memoria, que en esta ocasión hace de slave.<br>
        Para garantizar el acceso ordenado al bus, existe un sistema de arbitraje, centralizado o distribuido, que establece las prioridades cuando dos o más unidades pretenden acceder al mismo tiempo al bus, es decir, garantiza que en cada momento sólo exista un master. Para establecer el tiempo de duración de las transferencias y que sea conocido tanto por el master como por el slave, un bus debe disponer de los medios necesarios para la sincronización master-slave.<br>
        </p><br>
		</div>
		<div class="topic-box">
      <h2 id="1.2.4.3 Jerarquias de buses.">1.2.4.3 Jerarquias de buses.</h2><br>
      <p>Los computadores modernos tienen por lo menos 4 buses diferentes (bus interno, bus del procesador, bus del caché, bus de memoria, bus local de E/S, bus estándar de E/S). <br>
      Se les considera una jerarquía, porque cada bus se conecta al nivel superior a él dentro del computador, integrando así todas las partes del computador. <br>
      Cada uno es generalmente más lento que el que se encuentra sobre él, siendo el bus del procesador el más rápido tratándose de que este es el dispositivo más rápido del computador. Para mejorar el rendimiento del bus, las jerarquías de buses fueron implementadas cada vez más.</p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="1.2.5 Interrupciones.">1.2.5 Interrupciones.</h2><br>
      <p>Una interrupción consiste en un mecanismo que le permite al hardware la invocación de una rutina fuera del control del programa que está siendo ejecutado. Es una señal recibida por el procesador de una computadora, que indica que debe «interrumpir» el curso de ejecución actual y pasar a ejecutar código específico para tratar esta situación.<br>
      Una interrupción es una suspensión temporal de la ejecución de un proceso, para pasar a ejecutar una subrutina de servicio de interrupción, la cual, por lo general, no forma parte del programa, sino que pertenece al sistema operativo o al BIOS. Una vez finalizada dicha subrutina, se reanuda la ejecución del programa.<br>
      Las interrupciones son generadas por los dispositivos periféricos habilitando una señal del CPU (llamada IRQ del inglés "interrupt request") para solicitar atención del mismo. <br>
      Por ejemplo. cuando un disco duro completa una lectura solicita atención al igual que cada vez que se presiona una tecla o se mueve el ratón.<br>
      La primera técnica que se empleó para esto fue el polling, que consistía en que el propio procesador se encargara de sondear los dispositivos periféricos cada cierto tiempo para averiguar si tenía pendiente alguna comunicación para él. Este método presentaba el inconveniente de ser muy ineficiente, ya que el procesador consumía constantemente tiempo y recursos en realizar estas instrucciones de sondeo.<br>
	  </div>
				<h1>Unidad 2</h1>
		<div class="topic-box">
	<h2 id="2.1 Organización del procesador.">2.1 Organización del procesador.</h2><br>
      <p>La Unidad de Procesamiento (CPU) controla el funcionamiento del computador y lleva a cabo sus funciones de procesamiento de datos. Frecuentemente se le llama procesador.<br>
        Un procesador, incluye tanto registros visibles por el usuario como registros de control/estado.<br>
        Los registros visibles por el usuario pueden ser de uso general o tener una utilidad especial, mientras que los registros de control y estado se usan para controlar el funcionamiento del procesador, un claro ejemplo es el contador de programa.<br>
        Lleva a cabo una gran variedad de<br>
        Cálculos<br>
        Comparaciones numéricas<br>
        Transferencias de datos como respuesta a las peticiones de los programas que están siendo ejecutados en memoria.<br>
      </p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="2.2 Estructura de registros.">2.2 Estructura de registros.</h2><br>
      <p>Registros del CPU<br>
        Se emplean para controlar las instrucciones en ejecución, manejar direccionamiento de memoria y propiciar la capacidad aritmética.<br>
        Los registros vienen de tres tipos: datos, direcciones e índice, que tiene lugar en casi todos los aspectos de la operación del CPU.<br>
        El tamaño de un registro depende del CPU; los más simples tienen registros que aceptan 8 o 16 bits de datos y los más complejos tienen registros de 32, 48 o 64 bits.<br>
      </p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="2.2.1 Registros visibles para el usuario.">2.2.1 Registros visibles para el usuario.</h2><br>
      <p>Un registro visible al usuario es aquél que puede ser referenciado por medio del lenguaje máquina que ejecuta la CPU. Prácticamente todos los diseños contemporáneos de CPUs están provistos de varios registros visibles al usuario, en oposición a disponer de un único acumulador.<br>
      Podemos clasificarlos en:<br>
      Uso General<br>
      Datos<br>
      Direcciones<br>
      Códigos de Condición<br>
      Los registros de uso general pueden ser asignados por el programador a diversas funciones. A veces, su uso dentro del repertorio de instrucciones es para contener el operando para cualquier código de operación.<br>
      Esto proporciona una utilización de registros de auténtico uso general. Con frecuencia, sin embargo, existen restricciones. <br>
      Por ejemplo, puede haber registros específicos para operaciones en coma flotante.<br>
      En algunos casos los registros de uso general pueden ser utilizados para funciones de direccionamiento. En otros casos hay una separación clara o parcial entre registros de datos y registros de direcciones.<br>
      Los registros de datos pueden ser usados únicamente para contener datos y no se pueden emplear en el cálculo de una dirección de operando.<br>
      Los registros de dirección pueden ser en sí registros de uso más o menos general, o pueden estar dedicados a un modo de direccionamiento particular. <br>
      El caso más conocido es el puntero a pila. La cantidad de registros generales o especializados es una cuestión de diseño. <br>
      No hay solución óptima, pero la tendencia parece ir hacia el uso de registros especializados.<br>
      Otro problema de diseño es el numero de registros, de uso general o de datos más direcciones, que tienen que incluirse.<br>
      A mayor cantidad de registros se requieren mayor cantidad de bits en el campo de operando. Parece óptimo entre 8 y 32 registros. <br>
      Menos registros se traducen en más referencias a memoria; más registros no reducen notablemente las referencias a memoria. Por último, está la cuestión de la longitud de los registros.<br>
      Los registros que han de contener direcciones han de ser lo suficientemente grandes como para albergar la dirección más grande. <br>
      Los registros de datos deben ser capaces de contener valores de la mayoría de tipos de datos.<br>
      Algunas máquinas permiten que los registros contiguos sean usados como uno para contener valores de doble longitud.<br>
      Una categoría final de registros, que es al menos parcialmente visible al usuario, contiene códigos de condición (también llamados indicadores o flags).<br>
      Los códigos de condición son bits fijados por el hardware de la CPU como resultado de alguna operación. <br>
      Por ejemplo, una operación aritmética puede producir un resultado positivo, negativo o nulo, o con desbordamiento. <br>
      Además de almacenarse el propio resultado en un registro o en la memoria, se obtiene también un código de condición.<br>
      Los bits de códigos de condición se reúnen en uno o más registros. Por lo general, forman parte de un registro de control.<br>
      Comúnmente, las instrucciones de máquina permiten que estos bits sean leídos por referencia implícita, pero no pueden ser alterados por el programador.<br>
    </p><br>
	</div>
	<div class="topic-box">
      <h2 id="2.2.2 Registros de control y de estados.">2.2.2 Registros de control y de estados.</h2><br>
      <p>Registros de control<br>
        Hay diversos registros de la CPU que se pueden emplear para controlar su funcionamiento. La mayoría de éstos, en la mayor parte de las máquinas, no son visibles al usuario. Algunos de ellos pueden ser visibles a instrucciones de máquina ejecutadas en un modo de control o de sistema operativo.<br>
        Naturalmente, máquinas diferentes tendrán diferentes organizaciones de registros y usará distinta terminología. <br>
        Se enumera aquí una lista razonablemente completa de tipos de registros, con una breve descripción. Son esenciales cuatro registros para la ejecución de una instrucción: el contador de programa, el registro de dirección, el registro de instrucción y el registro de datos.<br>
        El contador de programa contiene una dirección de instrucción. Típicamente, la CPU actualiza el PC después de cada captación de instrucción de manera que siempre apunta a la siguiente instrucción a ejecutar. Una instrucción de bifurcación o salto también modificará el contenido de PC. <br>
        La instrucción captada se carga en el registro de instrucción, donde son analizados el código de operación y los campos de operando.<br>
        Se intercambian datos con la memoria por medio de registro de direcciones y el de datos. En un sistema con organización de bus, el de direcciones se conecta directamente al bus de direcciones, y el de datos directamente al bus de datos.<br>
        Los registros visibles al usuario, sucesivamente, intercambian datos con el de datos. Los cuatro registros que acaban de mencionar se usan para la transferencia de datos entre la CPU y la memoria. Dentro de la CPU, los datos tienen que ofrecerse a la ALU para su procesamiento. La ALU puede tener acceso directo al de datos y a los registros visibles al usuario. <br>
        Como alternativa, puede haber registros intermedios adicionales en el límite de la ALU; estos registros sirven como registros de entrada y salida de la ALU e intercambian datos con el de datos y los registros visibles al usuario.<br>
        Registros de estado<br>
        El registro de estado, también conocido como registro de bandera, palabra de estado del programa y registro de código de condición, se define como un conjunto de bits de bandera dentro de un procesador.<br>
        Un registro es un circuito procesador y es muy parecido a una ubicación de memoria, lo que significa que los datos podrían escribirse y leerse. <br>
        A diferencia de una ubicación de memoria, el registro de estado a menudo no tiene una dirección porque el microprocesador la usa internamente. En una unidad central de procesamiento (CPU) de 8 bits, se puede establecer un bit de registro de estado, igual al número 1, o borrar , igual al número 0, mediante una variedad de resultados de operación del procesador. El procesador a veces establece o borra los bits, pero otras veces, una instrucción de programa particular establece o borra los bits.<br>
        Los bits de registro de estado también se denominan banderas o bits de bandera, y el programador los utiliza para ciertos fines de programación. <br>
        Cada bandera en un registro de estado tiene un propósito único.<br>
        El indicador de acarreo se establece si una operación anterior hizo que el séptimo bit - o indicador negativo - se desbordara, o hiciera que el indicador de transporte se desbordara. Se establece durante los cambios de lógica, comparación y aritmética. El indicador de cero se establece si el resultado de la operación más reciente fue 0.<br>
        Un indicador llamado "deshabilitar interrupción" funciona permitiendo o deshabilitando la operación de interrupciones, que son instrucciones que detienen temporalmente ciertas operaciones para que se puedan realizar otras operaciones. <br>
        Cuando se establece este indicador en particular, no se permite que funcionen las interrupciones, pero cuando está claro, se permiten las interrupciones. Otra bandera llamada bandera decimal permite al procesador seguir un modo binario más avanzado para realizar ecuaciones aritméticas impecables. <br>
        Cuando se establece la bandera, utiliza este modo binario avanzado. Otro bit de registro es el bit de interrupción, que se establece cuando se ejecuta el comando Force Interrupt (BRK).<br>
      </p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="2.2.3 Ejemplos de registros de CPU reales.">2.2.3 Ejemplos de registros de CPU reales.</h2><br>
      <p>Registro de Propósito General (General-Purpose Register): Este tipo de registro se utiliza para almacenar datos y realizar operaciones aritméticas y lógicas. Los registros de propósito general son ampliamente utilizados en las CPUs modernas. Algunos ejemplos son:<br>
      x86: EAX, EBX, ECX, EDX en la arquitectura Intel x86.<br>
      ARM: R0, R1, R2, R3 en la arquitectura ARM.<br>
      Registro de Puntero de Pila (Stack Pointer Register): Este registro se utiliza para almacenar la dirección de memoria actual del tope de la pila. <br>
      Ayuda en la gestión de la pila de memoria utilizada para almacenar datos y direcciones de retorno durante las llamadas a funciones y las operaciones de salto. Algunos ejemplos son:<br>
      x86: ESP (Extended Stack Pointer) en la arquitectura Intel x86.<br>
      ARM: SP (Stack Pointer) en la arquitectura ARM.<br>
      Registro de Contador de Programa (Program Counter Register): También conocido como PC, este registro almacena la dirección de la próxima instrucción a ejecutar en el programa. Controla el flujo de ejecución del programa. Algunos ejemplos son:<br>
      x86: EIP (Extended Instruction Pointer) en la arquitectura Intel x86.<br>
      ARM: PC (Program Counter) en la arquitectura ARM.<br>
      Registro de Bandera/Estado (Flag/Status Register): Este registro almacena información sobre el estado y los resultados de las operaciones realizadas por la CPU. <br>
      Las banderas indican cosas como desbordamiento, igualdad, signo y otros indicadores de estado útiles para la ejecución de instrucciones condicionales. Algunos ejemplos son:<br>
      x86: EFLAGS (Extended Flags Register) en la arquitectura Intel x86.<br>
      ARM: CPSR (Current Program Status Register) en la arquitectura ARM.<br>
      Estos son solo algunos ejemplos de registros utilizados en CPUs reales. Ten en cuenta que las arquitecturas de procesadores pueden variar y tener conjuntos de registros diferentes. Además, algunas arquitecturas pueden tener registros especializados para funciones específicas, como registros de punto flotante para operaciones de coma flotante o registros de vector para instrucciones SIMD (Single Instruction, Multiple Data).</p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="2.3 El ciclo de instrucción.">2.3 El ciclo de instrucción.</h2><br>
      <p>Ciclos de computadora<br>
        La búsqueda es el proceso de obtener instrucciones de un programa o un elemento de datos de la memoria. <br>
        El término decodificar se refiere al proceso de traducir las instrucciones a señales que la computadora puede ejecutar.<br>
        Ejecutar es el proceso de llevar a cabo los comandos. Almacenamiento en este contexto significa escribir el resultado a la memoria.<br>
        En algunas computadoras, el procesador busca, decodifica, ejecuta y almacena solo una instrucción a la vez. <br>
        En estas computadoras el procesador espera hasta que una instrucción completa las cuatro etapas del ciclo antes de iniciar a trabajar con la siguiente instrucción.<br>
        Hoy día la mayoría de las computadoras personales soportan un concepto llamado pipelining:<br>
        Con pipelining los procesadores inician la búsqueda de una segunda instrucción antes de que se haya completado el ciclo de la computadora de la primera instrucción. Los procesadores que cuentan con pipelining habilitado son más rápidos en el procesamiento porque no tienen que esperar para que una instrucción complete el ciclo de computadora antes de buscar la siguiente.<br>
      </p><br>
	  </div>
<br>
		<div class="topic-box">
      <h2 id="2.3.1 Ciclo Fetch-Decode-Execute.">2.3.1 Ciclo Fetch-Decode-Execute.</h2><br>
      <p>El encargado de ejecutar un programa en una computadora u otro sistema computacional es el CPU, lo realiza siguiendo el llamado ciclo Fetch Decode Execute, con este ciclo se ejecutan todas las tareas que una computadora puede realizar.<br>
      Este ciclo tiene algunas variantes y conforme ha avanzado el tiempo y la tecnología ha sufrido algunos cambios, pero el ciclo básico se conforma de las siguientes etapas:<br>
      Traer la instrucción: Se obtiene la instrucción desde memoria y se almacena en el registro del CPU para instrucciones.<br>
      Decodificar la instrucción: Se identifica el modo de direccionamiento de la instrucción y la ubicación de los datos a tratar, ya sea de<br>
      memoria, registro o instrucción directamente.<br>
      Carga de Parámetros: Se ejecuta la lectura, cargando todos los datos identificados en el paso anterior.<br>
      Ejecutar: Se ejecuta la instrucción ya configurada, realiza la tarea indicada, ya sea una suma, resta, almacenar información, extraer<br>
      información etc.<br>
      Almacenar: Se almacena el resultado obtenido de ejecutar la instrucción, por ejemplo, el resultado de una suma o un índice (Número)<br>
      como resultado de éxito de almacenar u obtener información de un archivo, entre otros.<br>
      Actualizar PC: Esta etapa es la de actualizar el registro PC (Program Counter) que contiene la siguiente dirección a ejecutar.<br>
      Evidentemente al ser un ciclo estas etapas se repiten constantemente durante el funcionamiento de la computadora.<br>
      Se debe considerar que el ciclo expuesto anteriormente es muy básico. Como se mencionaba hoy en día estos ciclos han tenido algunas alteraciones y optimizado de gran manera, como se sabe los sistemas de hoy en día son multitareas, lo cual conlleva a una alteración en este ciclo, además de las diferentes técnicas para reducir el tiempo de ejecución de instrucciones con temas de concurrencia y paralelismo en los procesadores modernos.<br>
      El ciclo expuesto nos muestra un poco la forma en la que las computadoras funcionan, todo el proceso que conlleva ejecutar una instrucción que puede parecer muy simple, además este ciclo básico permite darse una idea de cómo ha evolucionado los procesadores y las técnicas para reducir el tiempo de ejecución dado que los sistemas actuales ejecutan de forma simultánea muchas veces este ciclo, siendo este modificado y más eficiente.<br>
      </p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="2.3.2 Segmentación de instrucciones.">2.3.2 Segmentación de instrucciones.</h2><br>
      <p>La segmentación (en inglés pipelining, literalmente 'tubería' o 'cañería', o data pipeline) es un método por el cual se consigue aumentar el rendimiento de algunos sistemas electrónicos digitales. Se usa principalmente en los microprocesadores.<br>
        El nombre, por analogía, viene de que para impulsar el gas en un oleoducto a la máxima velocidad posible es necesario dividir el oleoducto en tramos y colocar una bomba que dé un<br>
        nuevo impulso al gas.<br>
        El símil con la programación existe en que los cálculos deben ser registrados o sincronizados con el reloj cada cierto tiempo para que la ruta crítica (tramo con más carga o retardo computacional entre dos registros de reloj) se reduzca.<br>
        La ruta crítica es en realidad la frecuencia máxima de trabajo alcanzada por el conjunto. A mayor ruta crítica (tiempo o retraso entre registros) menor es la frecuencia máxima de trabajo y a menor ruta crítica mayor frecuencia de trabajo. La una es la inversa de la otra. Repartir o segmentar equitativamente el cálculo hace que esa frecuencia sea la óptima a costa de más área para el almacenamiento o registro de los datos intervinientes y de un retraso o latencia (en ciclos de reloj/tiempo) en la salida del resultado equivalente al número de segmentaciones o registros realizados.<br>
        La ventaja primordial de este sistema es que, tal y como se muestra en la imagen, una vez el canal (pipe) está lleno, es decir, después de una latencia de cuatro en la imagen, los resultados de cada comando vienen uno tras otro cada flanco de reloj y sin latencia extra por estar encadenados dentro del mismo canal. <br>
        Todo esto habiendo maximizado la frecuencia máxima de trabajo.<br>
      </p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="2.3.3 Conjunto de instrucciones, Caracteristicas y funciones.">2.3.3 Conjunto de instrucciones, Caracteristicas y funciones.</h2><br>
      <p>Un conjunto de instrucciones o repertorio de instrucciones, juego de instrucciones o ISA (del inglés Instruction Set Architecture, Arquitectura del Conjunto de Instrucciones) es una especificación que detalla las instrucciones que una CPU de un ordenador puede entender y ejecutar, o el conjunto de todos los comandos implementados por un diseño particular de una CPU.<br>
      El término describe los aspectos del procesador generalmente visibles a un programador, incluyendo los tipos de datos nativos, las instrucciones, los registros, la arquitectura de memoria y las interrupciones, entre otros aspectos.<br>
      Existe principalmente de 3 tipos: CISC (Complex Instruction Set Computer), RISC (Reduced Instruction Set Computer) y SISC (Specific Instruction Set Computer).<br>
      La arquitectura del conjunto de instrucciones (ISA) se emplea a veces para distinguir este conjunto de características de la microarquitectura, que son los elementos y técnicas que se emplean para implementar el conjunto de instrucciones. Entre estos elementos se encuentras las microinstrucciones y los sistemas de caché.<br>
      Procesadores con diferentes diseños internos pueden compartir un conjunto de instrucciones; por ejemplo el Intel Pentium y AMD Athlon implementan versiones casi idénticas del conjunto de instrucciones x86, aunque tienen diseños internos completamente opuestos.<br>
      </p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="2.3.4 Modos de direccionamiento.">2.3.4 Modos de direccionamiento.</h2><br>
      <p>Inmediato (Immediate): En este modo de direccionamiento, el valor del operando se especifica directamente en la instrucción. Por ejemplo, la instrucción ADD R1, #10 suma el valor inmediato 10 al contenido del registro R1.<br>
      Directo (Direct): En este modo, la dirección de memoria del operando se especifica directamente en la instrucción. Por ejemplo, la instrucción LOAD R2, [100] carga el valor almacenado en la dirección de memoria 100 en el registro R2.<br>
      Indirecto (Indirect): En este modo, la dirección de memoria del operando se obtiene indirectamente a través de un registro o puntero. Por ejemplo, la instrucción LOAD R3, [R2] carga el valor almacenado en la dirección de memoria apuntada por el contenido del registro R2 en el registro R3.<br>
      Basado en Registro (Register-based): En este modo, la dirección de memoria del operando se calcula sumando un desplazamiento a un registro base. Por ejemplo, la instrucción LOAD R4, [R5+10] carga el valor almacenado en la dirección de memoria calculada sumando 10 al contenido del registro R5 en el registro R4.<br>
      Indexado (Indexed): En este modo, la dirección de memoria del operando se calcula sumando un desplazamiento a un registro índice. Por ejemplo, la instrucción LOAD R6, [R7+R8] carga el valor almacenado en la dirección de memoria calculada sumando el contenido del registro R8 al contenido del registro R7 en el registro R6.<br>
      Relativo (Relative): Este modo se utiliza en instrucciones de salto o branch. La dirección de salto se calcula sumando un desplazamiento relativo a la dirección de la siguiente instrucción. Por ejemplo, la instrucción JUMP [PC+20] realiza un salto a la dirección de memoria calculada sumando 20 al contenido del contador de programa (PC).</p><br>
	  </div>
	  <div class="topic-box">
      <h2 id="2.4 Casos de estudio de CPU reales.">2.4 Casos de estudio de CPU reales.</h2><br>
      <p>En informática, los modos de direccionamiento son las diferentes maneras de especificar un operando dentro de una instrucción en lenguaje ensamblador.<br>
        Un modo de direccionamiento especifica la forma de calcular la dirección de memoria efectiva de un operando mediante el uso de la información contenida en registros y/o constantes, contenida dentro de una instrucción de la máquina o en otra parte.<br>
        No existe una forma generalmente aceptada de nombrar a los distintos modos de direccionamiento. En particular, los distintos autores y fabricantes de equipos pueden dar nombres diferentes para el modo de hacer frente al mismo, o los mismos nombres, a los diferentes modos de direccionamiento.<br>
        Además, un modo de direccionamiento que en una determinada arquitectura se trata como un modo de direccionamiento, puede representar la funcionalidad que en otra arquitectura está cubierto por dos o más modos de direccionamiento.<br>
      </p><br>
	  </div>
					<h1>Unidad 3</h1>
<div class="topic-box">
<h2 id=  "3.1 Chip set.">3.1 Chip set.</h2><br>
        <p>Un chipset es el conjunto de circuitos integrados diseñados con base en la arquitectura de un procesador (en algunos casos, diseñados como parte integral de esa arquitectura), permitiendo que ese tipo de procesadores funcionen en una placa base. Sirven de puente de comunicación con el resto de componentes de la placa, como son la memoria, las tarjetas de expansión, los puertos USB, ratón, teclado, etc.<br>
        Las placas base modernas suelen incluir dos integrados, denominados puente norte y puente sur, y suelen ser los circuitos integrados más grandes después de la GPU y el microprocesador. Las últimas placa base carecen de puente norte, ya que los procesadores de última generación lo llevan integrado.<br>
        Funcionamiento:<br>
        El chipset es el que hace posible que la placa base funcione como eje del sistema, dando soporte a varios componentes e interconectándolos de forma que se comuniquen entre ellos haciendo uso de diversos buses. <br>
        Es uno de los pocos elementos que tiene conexión directa con el procesador, gestiona la mayor parte de la información que entra y sale por el bus principal del procesador, del sistema de vídeo y muchas veces de la memoria RAM. En el caso de los computadores PC, es un esquema de arquitectura abierta que establece modularidad: el chipset debe tener interfaces estándar para los demás dispositivos. <br>
        Esto permite escoger entre varios dispositivos estándar, por ejemplo, en el caso de los buses de expansión, algunas tarjetas madre pueden tener bus PCI-Express y soportar diversos tipos de tarjetas de distintos anchos de bus (1x, 8x, 16x).<br>
        </p><br>
		</div>
		<div class="topic-box">
      <h2 id=  "3.1.1 Unidad de procesaiento.">3.1.1 Unidad de procesaiento.</h2><br>
        <p>La unidad central de procesamiento (siglas en inglés Central Processing Unit) es el hardware dentro de una computadora u otros dispositivos programables. Su trabajo es interpretar las instrucciones de un programa informático mediante la realización de las operaciones básicas aritméticas, lógicas y externas (provenientes de la unidad de entrada/salida). Su diseño y avance ha variado notablemente desde su creación, aumentando su eficiencia y potencia, y reduciendo aspectos como el consumo de energía y el costo.<br>
        Los componentes de la CPU son:<br>
        Unidad aritmético lógica (ALU): Realiza operaciones aritméticas y lógicas.<br>
        Unidad de control (CU): Dirige el tráfico de información entre los registros de la CPU y conecta con la ALU las instrucciones extraídas<br>
        de la memoria.<br>
        Registros internos: No accesibles (de instrucción, de bus de datos y bus de dirección) y accesibles de uso específico (contador programa, puntero pila, acumulador, flags, etc.) o de uso general.<br>
        </p><br>
		</div>
		<div class="topic-box">
      <h2 id=  "3.1.2 Controlador del Bus.">3.1.2 Controlador del Bus.</h2><br>
        <p>El controlador del bus se encarga de la frecuencia de funcionamiento y las señales de sincronismo, temporización y control. Está ubicado en un chip en la placa base.<br>
        El bus es la vía a través de la que se van a transmitir y recibir todas las comunicaciones, tanto internas como externas, del sistema informático. El bus es solamente un dispositivo de transferencia de información entre los componentes conectados a él, no almacena información alguna en ningún momento. Los datos, en forma de señal eléctrica, sólo permanecen en el bus el tiempo que necesitan en recorrer la distancia entre los dos componentes implicados en la transferencia.</p>  <br>
	</div>
	<div class="topic-box">
      <h2 id=  "3.1.3 Puertas de Entrada/Salida.">3.1.3 Puertas de Entrada/Salida.</h2><br>
        <p>Un puerto de E/S es un enchufe en una computadora al que se conecta un cable. El puerto conecta la CPU a un dispositivo periférico a través de una interfaz de hardware o a la red a través de una interfaz de red.<br>
        En otras palabras, un puerto de E/S es un punto de conexión que actúa como interfaz entre la computadora y dispositivos externos como mouse, impresora, módem, etc. Estos son de dos tipos:<br>
        Puerto interno: Conecta la placa base a dispositivos internos como unidad de disco duro, unidad de CD, módem interno, etc.<br>
        Puerto externo: Conecta la placa base a dispositivos externos como módem, mouse, impresora, unidades flash, etc.<br>
        Tipos de puertos:<br>
        Puerto serial: Los puertos seriales transmiten datos secuencialmente un bit a la vez. Por lo tanto, solo necesitan un cable para transmitir 8 bits. Sin embargo, también los hace más lentos. Los puertos serie suelen ser conectores macho de 9 o 25 pines. También se conocen como puertos COM (comunicación) o puertos RS323C.<br>
        Puerto USB: USB son las siglas de Universal Serial Bus. Es el estándar de la industria para la conexión de datos digitales de corta distancia. <br>
        El puerto USB es un puerto estandarizado para conectar una variedad de dispositivos como impresora, cámara, teclado, altavoz, etc.<br>
        Puerto PS/2: PS/2 son las siglas de Personal System/2. Es un puerto estándar hembra de 6 pines que se conecta al cable mini-DIN macho. <br>
        IBM introdujo PS/2 para conectar el mouse y el teclado a las computadoras personales. Este puerto ahora está casi obsoleto, aunque algunos sistemas compatibles con IBM pueden tener este puerto.<br>
        Puerto de infrarrojos: El puerto de infrarrojos es un puerto que permite el intercambio inalámbrico de datos en un radio de 10 m. <br>
        Dos dispositivos que tienen puertos infrarrojos se colocan uno frente al otro para que los haces de luces infrarrojas se puedan utilizar para compartir datos.<br>
        Puerto Bluetooth: Bluetooth es una especificación de telecomunicaciones que facilita la conexión inalámbrica entre teléfonos, computadoras y otros dispositivos digitales a través de una conexión inalámbrica de corto alcance. El puerto Bluetooth permite la sincronización entre dispositivos habilitados para Bluetooth.<br>
        Puerto FireWire: FireWire es el estándar de interfaz de Apple Computer para permitir la comunicación de alta velocidad mediante bus serie. También se llama IEEE 1394 y se usa principalmente para dispositivos de audio y video como videocámaras digitales.</p>      <br>
<div class="topic-box">      
	  <h2 id=  "3.1.4 controlador de interrupciones.">3.1.4 controlador de interrupciones.</h2><br>
        <p>El controlador de interrupciones es un módulo que tiene por función gestionar las interrupciones de entrada/salida para el procesador. Esto ahorra diseñar lógica y añadir patitas al procesador. También proporciona flexibilidad porque permite idealmente, gestionar un número ilimitado señales de interrupción (favoreciendo la expansión del sistema de entrada/salida).<br>
        El controlador recibe el conjunto de señales de interrupción procedentes de los dispositivos, toma la decisión de cuál es la más prioritaria, y envía una única señal al procesador. La respuesta del procesador es transmitida al dispositivo y el propio controlador se encarga de depositar en el bus el vector de la interrupción.<br>
        Ciclo de reconocimiento de interrupción<br>
        Tras la activación de una línea IR, el controlador activa la salida INTR señalándole a la CPU la existencia de una interrupción activada.<br>
        Al recibir la señal, el procesador da un pulso en su salida INTA indicando que comienza un ciclo de reconocimiento de interrupción.<br>
        Al recibir el controlador el pulso por su entrada INTA comienza a arbitrar las interrupciones recibidas y selecciona la más prioritaria.<br>
        Se emite un segundo pulso por la línea INTA del procesador (o controlador de bus) que utiliza el controlador para depositar en el bus el<br>
        vector correspondiente a la interrupción de mayor prioridad.<br>
        El procesador obtiene la dirección de la rutina de interrupción a partir de este dato y salta a ella. Almacena el registro de flags y la<br>
        dirección de retorno, deshabilita las interrupciones y comienza a ejecutar la rutina.</p>      <br>
		</div>
		<div class="topic-box">
      <h2 id=  "3.1.5 controlador de acceso directo a memoria.">3.1.5 controlador de acceso directo a memoria.</h2><br>
        <p>El mecanismo de acceso directo a memoria está controlado por un chip específico, el DMAC ("DMA Controller"), que permite realizar estos intercambios sin apenas intervención del procesador. En los XT estaba integrado en un chip 8237A que proporcionaba 4 canales de 8 bits (puede mover solo 1 Byte cada vez); sus direcciones de puerto son 000–00Fh. Posteriormente en los AT se instalaron dos de estos integrados y las correspondientes líneas auxiliares en el bus de control.<br>
        En contra de lo que podría parecer, el resultado no fue disponer de 8 canales, porque el segundo controlador se colgó en “Cascada” de la línea 4 del primero. Los canales del segundo DMAC está asignado a las direcciones 0C0–0DFh y son de 16 bits.<br>
        Pueden mover 2 Bytes (de posiciones contiguas) cada vez. Cada canal tiene asignada una prioridad para el caso de recibirse simultáneamente varias peticiones (los números más bajos tienen prioridad más alta).<br>
        Pueden ser utilizados por cualquier dispositivo que los necesite (suponiendo naturalmente que esté diseñado para soportar este modo de operación). Cada sistema los asigna de forma arbitraria, pero hay algunos cuya asignación es estándar.<br>
        </p>      <br>
		</div>
		<div class="topic-box">
      <h2 id=  "3.1.6 circuitos de temporizacion.">3.1.6 circuitos de temporizacion.</h2><br>
        <p>El circuito electrónico que más se utiliza tanto en la industria como en circuitería comercial, es el circuito temporizador o de retardo, dentro de la categoría de temporizadores, cabe destacar el más económico y también menos preciso consistente en una resistencia y un condensador, a partir de aquí se puede contar con un sinfín de opciones.<br>
        Un temporizador básicamente consiste en un elemento que se activa o desactiva después de un tiempo preestablecido. <br>
        De esta manera podemos determinar el parámetro relacionado con el tiempo que ha de transcurrir para que el circuito susceptible de temporizarse, se detenga o empiece a funcionar o simplemente cierre un contacto o lo abra.<br>
        Se encuentra en la placa base de la PC y que es capaz de mantener una cuenta de tiempo basada en el reloj de la computadora. Puede usarse para calcular el intervalo entre dos mediciones de tiempo o para generar pausas. Este chip tiene la capacidad de realizar diferentes funciones de conteo. Es útil para medir el tiempo que dura cierto proceso o para mantener actualizadas la hora del día y la fecha si se deja la PC conectada y encendida.</p>     <br>
     </div>
	 <div class="topic-box">
	 <h2 id=  "3.1.7 Circuitos de control.">3.1.7 Circuitos de control.</h2><br>
        <p>Es una red secuencial que acepta un código que define la operación que se va a ejecutar y luego prosigue a través de una secuencia de estados, generando una correspondiente secuencia de señales control.<br>
        Estas señales de control incluyen el control de lectura-escritura y señales de dirección de memoria válida en el bus de control del sistema. <br>
        Otras señales generadas por el controlador se conectan a la ALU y a los registros internos del procesador para regular el flujo de información en el procesador y desde los buses de dirección y de datos del sistema.<br>
        </p>      <br>
		</div>
		<div class="topic-box">
      <h2 id=  "3.1.8 Controladores de video.">3.1.8 Controladores de video.</h2><br>
        <p>La tarjeta de video, (también llamada controlador de video), es un componente electrónico requerido para generar una señal de video que se manda a una pantalla de video por medio de un cable. La tarjeta de video se encuentra normalmente en la placa de sistema de la computadora o en una placa de expansión. La tarjeta gráfica reúne toda la información que debe visualizarse en pantalla y actúa como interfaz entre el procesador y el monitor; la información es enviada a éste por la placa luego de haberla recibido a través del sistema de buses.<br>
        Una tarjeta gráfica se compone, básicamente, de un controlador de video, de la memoria de pantalla o RAM video, y el generador de caracteres, y en la actualidad también poseen un acelerador de gráficos. El controlador de video va leyendo a intervalos la información almacenada en la RAM video y la transfiere al monitor en forma de señal de video; el número de veces por segundo que el contenido de la RAM video es leído y transmitido al monitor en forma de señal de video se conoce como frecuencia de refresco de la pantalla.</p>      <br>
      </div>
	  <div class="topic-box">
	  <h2 id=  "3.2 Aplicaciones.">3.2 Aplicaciones.</h2><br>
        <p>En informática, un periférico de entrada/salida o E/S (en inglés: input/output o I/O) es aquel tipo de dispositivo periférico de un computador capaz de interactuar con los elementos externos a ese sistema de forma bidireccional, es decir, que permite tanto que sea ingresada información desde un sistema externo, como emitir información a partir de ese sistema. Los Dispositivos Periféricos de entrada son todos aquellos dispositivos que permiten introducir datos o información en una computadora para que esta los procese u ordene.<br>
        Funciones:<br>
        Un periférico de E/S es el que se utiliza para ingresar (E) datos a la computadora, y luego de ser procesados por la unidad central de procesamiento (CPU), genera la salida (S) de información. Su función es leer o grabar, permanente o virtualmente, todo aquello que se haga con la computadora, para que pueda ser utilizado por los usuarios u otros sistemas.<br>
        Tipos:<br>
        Dispositivos o periféricos de comunicación entre computadoras, tales como módems y tarjetas de red, por lo general sirven para entrada y salida. También, los dispositivos de almacenamiento de datos, como los discos rígidos, la unidad de estado sólido, las memorias flash, las disqueteras, entre otros, se pueden considerar periféricos de entrada/salida.<br>
        </p>      <br>
		</div>
		<div class="topic-box">
      <h2 id=  "3.2.1 Entrada/Salida">3.2.1 Entrada/Salida</h2><br>
        <p>Conforme la tecnología avanza, más datos se van generando, por lo que es necesario contar con un almacenamiento eficiente para poder guardar toda esa información y acceder a ellos. El almacenamiento de datos ha cambiado mucho, desde los sistemas de disco, que muy probablemente se sigan utilizando, pero de una forma más digital: hoy se encuentran conectados a una red y son definidos por un software.<br>
        El almacenamiento de datos tiene un proceso a través del uso de la tecnología, ésta se aplica para organizar, distribuir y archivar información con los bytes y los bits que son parte de los sistemas de los que la gente depende día con día, llega a ser tan importante en todos los servicios: desde una simple aplicación, contenido multimedia, direcciones, contactos, hasta protocolos de red y todo lo que tiene que ver con el mundo digital.<br>
        Memoria contra almacenamiento<br>
        Generalmente, los usuarios de computadoras tienden a confundir los términos “memoria” y “almacenamiento” pues los emplean de manera indistinta, utilizándolos para referirse a la RAM (o memoria principal) o al disco duro. Desde el punto de vista técnico, ambos términos son prácticamente iguales pues tanto la RAM como el disco duro se utilizan para almacenar información, claro está, de formas distintas y para propósitos diferentes.<br>
        Mientras la memoria se refiere a la ubicación de los datos a corto plazo, el almacenamiento es el componente de su computadora que le permite almacenar y acceder a datos a largo plazo. Usualmente, el almacenamiento se da en forma de una unidad de estado sólido o un disco duro. El almacenamiento le permite acceder y almacenar sus aplicaciones, sistema operativo y archivos por un tiempo indefinido.<br>
        Almacenamiento en sistemas informáticos<br>
        Un dispositivo de almacenamiento es un hardware que se utiliza principalmente para almacenar datos. <br>
        Cada computadora de escritorio, computadora portátil, tablet y smartphone tendrán algún tipo de dispositivo de almacenamiento en su interior y también puedes obtener unidades de almacenamiento externo independientes que se pueden utilizar en varios dispositivos.<br>
        Unidades de discos duros (HDD).<br>
        Discos de estado sólido (SSD).<br>
        </p><br>
		</div>
		<div class="topic-box">
      <h2 id=  "3.2.2 Almacenamiento.">3.2.2 Almacenamiento.</h2><br>
        <p>Una fuente de alimentación es un componente esencial de cualquier dispositivo electrónico ya que es ella quien se encarga de darle vida. En cualquier equipo, por pequeño que sea, siempre hay una fuente de alimentación, aunque no la veamos.<br>
        En los ordenadores de sobremesa, la fuente de alimentación se encuentra generalmente en la parte inferior de la torre (en cajas antiguas se encuentra en la superior), y muchas cajas de ordenador optan por incorporar un compartimento para separarla del resto y ya de paso ocultar todos los cables salientes de ella.<br>
        Una fuente de alimentación sirve para dar energía a un dispositivo electrónico. <br>
        Siguiendo con el tema de los ordenadores de sobremesa, la fuente de alimentación da energía a la placa base, CPU, tarjetas gráficas, HDDs, SSDs, ventiladores, lectores de CDs. En resumen, alimenta a todo lo que necesite energía, para ello hace uso de diferentes tipos de cables.<br>
        Las fuentes de alimentación proporcionan energía a los SSD y HDD mediante conectores SATA de energía, y a los ventiladores mediante conectores molex de 3 o 4 pines o bien mediante la propia placa base (que es alimentada con el conector de 24 pines ATX). De esta manera, todos los componentes reciben energía de la fuente de alimentación. <br>
        Además, las fuentes protegen a todos los componentes mediante una gran cantidad de sistemas dedicados a ello.<br>
        Existen fuentes de alimentación que no requieren de ventilación, por lo que su refrigeración es completamente pasiva. <br>
        Estos modelos suelen ser fuentes de medio-bajo voltaje con una alta eficiencia, para que el calor generado sea menor y se pueda llevar a cabo su disipación sin usar ni un solo ventilador acoplado a la fuente, con los que existan en la caja serán más que suficiente.</p><br>
      </div>
	  <div class="topic-box">
	  <h2 id=  "3.2.3 Fuentes de alimentación.">3.2.3 Fuentes de alimentación.</h2><br>
	  </div>
	  <div class="topic-box">
      <h2 id=  "3.3 Ambientes de servicio.">3.3 Ambientes de servicio.</h2><br>
	 
        <p>El negocio de proveer servicios de datos es mucho más complejo que la forma en la que se dan los tradicionales servicios, los primeros requieren de nuevos conocimientos y modelos de negocio, que con frecuencia se termina involucrando o necesitando la colaboración de terceras empresas. Por lo que se hace necesario que los operadores tradicionales transformen su negocio para ofrecer los servicios de datos con los niveles de servicio que el mercado exige.<br>
        </p><br>
		</div>
		<div class="topic-box">
      <h2 id=  "3.3.1 Negocios.">3.3.1 Negocios.</h2><br>
        <p>Definitivamente, la tecnología en general ha sido la causa principal y la acción más directa para la transformación del trabajo de las organizaciones en la posguerra del siglo XX. Tanto los bienes de capital "duros" (computadores, teléfonos, videos, facsímiles, grabadoras, etc.), como los programas y sistemas de información y comunicación en general, han incrementado enormemente la productividad y eficiencia de las organizaciones. <br>
        Tenemos como ejemplos los siguientes: bases de datos en redes de todo orden y topología, sistemas de reservaciones en aerolíneas, sistemas de contabilidad y nóminas, archivos clínicos en centros de salud, sistemas de conmutación electrónica y un sin número de otras aplicaciones a procesos administrativos.</p><br>
     </div>
	 <div class="topic-box">
	 <h2 id=  "3.3.2 Industria.">3.3.2 Industria.</h2><br>
        <p>La industrialización de los servicios de tecnología de información va a redefinir el mercado en términos de como las organizaciones evalúan, compran y seleccionan los servicios y como los vendedores desarrollan y establecen precios de los servicios.<br>
        Para lograr esta estandarización, se requiere un enfoque hacia las soluciones genéricas y esto debe ser responsabilidad de los proveedores, que deben de desarrollar, operar y administrar el resultado de estos genéricos de TI.<br>
        Aunque los servicios de TI están en proceso de madurez, la madurez de la industria se ha incrementado en aspectos evidentes, como la forma en que los servicios son implementados y administrados.<br>
        </p><br>
     </div>
	 <div class="topic-box">
	 <h2 id=  "3.3.3 Comercio electrónico.">3.3.3 Comercio electrónico.</h2><br>
      <p>El desarrollo de estas tecnologías y de las telecomunicaciones ha hecho que los intercambios de datos crezcan a niveles extraordinarios, simplificándose cada vez más y creando nuevas formas de comercio, y en este marco se desarrolla el Comercio Electrónico.<br>
      Se considera “Comercio Electrónico” al conjunto de aquellas transacciones comerciales y financieras realizadas a través del procesamiento y la transmisión de información, incluyendo texto, sonido e imagen.</p><br>
	</div>
						<h1>Unidad 4</h1>
<div class="topic-box">
<h2 id="4.1 Aspectos básicos de la computación paralela.">4.1 Aspectos básicos de la computación paralela </h2>
    <p>La computación paralela se basa en la idea de dividir un problema en tareas más pequeñas y procesarlas de manera simultánea utilizando múltiples recursos de computación. Esto permite un procesamiento más rápido y eficiente en comparación con los enfoques secuenciales tradicionales. Algunos aspectos fundamentales de la computación paralela incluyen la sincronización de tareas, la comunicación entre procesos y la gestión de recursos.</p>
    </div>
	<div class="topic-box">
	<h2 id="4.2 Tipos de computación paralela.">4.2 Tipos de computación paralela.</h2>
    
	<p>Existen varios tipos de computación paralela que se utilizan en diferentes contextos y escenarios. Algunos de los enfoques más comunes incluyen el procesamiento paralelo a nivel de bit, a nivel de instrucción, a nivel de datos y a nivel de tarea. Estos enfoques se diferencian en cómo se dividen y procesan las tareas y los datos.
</p>
    <h2 id="4.2.1 Clasificacion.">4.2.1 Clasificacion.</h2>
    <p>La clasificación de la computación paralela puede realizarse en función de la forma en que se dividen las tareas y los datos, así como de la forma en que se coordinan y comunican los procesos paralelos. Algunas clasificaciones comunes incluyen la computación paralela a nivel de bit, a nivel de instrucción, a nivel de datos y a nivel de tarea.
</p>
    <h2 id="4.2.2 Arquitectura de computadores secuenciales.">4.2.2 Arquitectura de computadores secuenciales.</h2>
    <p>La arquitectura de computadores secuencial se refiere a los sistemas informáticos tradicionales en los que las instrucciones se ejecutan una tras otra en secuencia. Este tipo de arquitectura sigue siendo común en muchas computadoras personales y estaciones de trabajo.
</p>
    <h2 id="4.2.3 Organización de direcciones de memoria.">4.2.3 Organización de direcciones de memoria.</h2>
    <p>La organización de direcciones de memoria se refiere a cómo se asignan y acceden a las direcciones de memoria en un sistema de computación paralela. Esto incluye consideraciones como la memoria compartida, la memoria distribuida y las técnicas de direccionamiento utilizadas para acceder a los datos en paralelo.</p>
    <h2 id="4.3 Sistema de memoria compartida.">4.3 Sistema de memoria compartida.</h2>
    <p>Los sistemas de memoria compartida son un enfoque de computación paralela en el que múltiples procesadores acceden a una misma área de memoria compartida. Esto permite a los procesadores compartir datos y comunicarse de manera eficiente. Dentro de los sistemas de memoria compartida, existen dos tipos principales de redes: las redes de medio compartida y las redes conmutadas.</p>
    <h2 id="4.3.1.1 Redes de medio compartida.">4.3.1.1 Redes de medio compartida.</h2>
    <p>Las redes de medio compartida son un tipo de arquitectura de memoria compartida en la que los procesadores se conectan físicamente a un bus compartido o a una red de interconexión. Los procesadores pueden leer y escribir en la memoria compartida a través de este medio compartido.</p>
    <h2 id="4.3.1.2 Redes conmutadas.">4.3.1.2 Redes conmutadas.</h2>
    <p>Las redes conmutadas, por otro lado, utilizan interruptores o conmutadores para establecer conexiones entre los procesadores y la memoria compartida. Estas redes ofrecen una mayor escalabilidad y capacidad de comunicación en comparación con las redes de medio compartida.</p>
    <h2 id="4.4 Sisitemas de memoria construida.">4.4 Sisitemas de memoria construida.</h2>
    <p>Los sistemas de memoria construida son una forma de organización de la memoria en la computación paralela en la que cada procesador tiene su propia memoria local. Esto permite una mayor independencia entre los procesadores y reduce la necesidad de acceder a una memoria compartida.</p>
    <h2 id="4.5 Casos de estudio.">4.5 Casos de estudio.</h2>
    <p>En el campo de la computación paralela, existen numerosos casos de estudio que han demostrado la eficacia y los beneficios de los enfoques paralelos en diferentes dominios. Algunos ejemplos incluyen el uso de computación paralela en simulaciones científicas, análisis de grandes conjuntos de datos, renderizado de gráficos y modelado de sistemas complejos.</p>
    </div>


</body>
</html>
